import 'package:auto_size_text/auto_size_text.dart';import 'package:black_history_gram/View/checkout_information.dart';import 'package:black_history_gram/View/young_adult.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import '../constants.dart';class CheckOut extends StatefulWidget {  const CheckOut({Key key}) : super(key: key);  @override  _CheckOutState createState() => _CheckOutState();}class _CheckOutState extends State<CheckOut> {  @override  Widget build(BuildContext context) {    final devSize = MediaQuery.of(context).size;    return Scaffold(      appBar: AppBar(        iconTheme: IconThemeData(          color: Colors.white,        ),        backgroundColor: Color(0xFF8D0303),        leading: IconButton(          icon: Icon(Icons.arrow_back,color: Colors.white,),        ),        title: Container(          height: devSize.height * 0.05,          width: devSize.width * 0.99,          child: Row(            mainAxisAlignment: MainAxisAlignment.center,            children: [              Container(                child: Image.asset(                  'assets/rendzio.png',                  fit: BoxFit.scaleDown,                ),                width: devSize.width * 0.1,                height: devSize.height * 0.04,              ),              Container(                //height: devSize.height*0.03,                width: devSize.width * 0.5,                child: Container(                  child: Text(                    'Checkout',                    style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),                  ),                ),              ),            ],          ),        ),        actions: [          Padding(            padding: const EdgeInsets.all(7.0),            child: Container(              //height: devSize.height*0.03,              width: devSize.width * 0.08,              child: Container(                child: Image.asset(                  'assets/cart_icon.png',                  fit: BoxFit.scaleDown,                ),                width: devSize.width * 0.06,                height: devSize.height * 0.06,              ),            ),          ),        ],      ),      body: SingleChildScrollView(child: Column(        children: [          Padding(            padding: const EdgeInsets.all(16.0),            child: Row(              crossAxisAlignment: CrossAxisAlignment.center,              mainAxisAlignment: MainAxisAlignment.center,              children: [                Text(                  "CART",                  style: TextStyle(fontSize: 18, color: Color(0xFF8D0303)),                ),                Container(                    child: Image.asset(                      'assets/arrow_icon1.png',                      fit: BoxFit.scaleDown,                      height: 30,                      width: 30,                    ),                    height: devSize.width * 0.03,                    width: devSize.height * 0.03),                Text(                  "INFORMATION",                  style: TextStyle(fontSize: 18, color: Colors.black),                ),                Container(                    child: Image.asset(                      'assets/arrow_icon1.png',                      fit: BoxFit.scaleDown,                      height: 30,                      width: 30,                    ),                    height: devSize.width * 0.03,                    width: devSize.height * 0.03),                Text(                  "PAYMENT",                  style: TextStyle(fontSize: 18, color: Colors.black),                ),              ],            ),          ),          Padding(            padding: const EdgeInsets.only(top: 8.0, left: 16.0),            child: Row(              children: [                Container(                  width: devSize.width / 2.3,                  child: SizedBox(                    width: devSize.width / 2.3,                    child: TextFormField(                      // focusNode: _focusNode,                      decoration: InputDecoration(                        filled: true,                        fillColor: Colors.white,                        hintText: 'First Name(Optional)',                        hintStyle: TextStyle(                          color: kFormInputColor,                          fontSize: 13,                        ),                        isDense: true,                        contentPadding: EdgeInsets.fromLTRB(8, 16, 15, 0),                        // contentPadding: EdgeInsets.only(left: 8,right: 8),                        focusedBorder: OutlineInputBorder(                          borderSide: BorderSide(                            color: Color(0xFF8D0303),                            width: 0.5,                          ),                        ),                        errorBorder: OutlineInputBorder(                          borderSide: BorderSide(                            color: kSectionTileColor,                            width: 0.5,                          ),                        ),                        enabledBorder: OutlineInputBorder(                          borderSide: BorderSide(                            color: kSectionTileColor,                            width: 0.5,                          ),                        ),                      ),                      obscureText: false,                      //validator: passwordValidator,                      //controller: _passwordController,                      keyboardType: TextInputType.text,                    ),                  ),                ),                SizedBox(                  width: 4,                ),                Container(                  width: devSize.width / 2.3,                  child: SizedBox(                    width: devSize.width / 2.3,                    child: TextFormField(                      // focusNode: _focusNode,                      decoration: InputDecoration(                        filled: true,                        fillColor: Colors.white,                        hintText: 'Last Name',                        hintStyle: TextStyle(                          color: kFormInputColor,                          fontSize: 13,                        ),                        isDense: true,                        contentPadding: EdgeInsets.fromLTRB(8, 16, 15, 0),                        // contentPadding: EdgeInsets.only(left: 8,right: 8),                        focusedBorder: OutlineInputBorder(                          borderSide: BorderSide(                            color: Color(0xFF8D0303),                            width: 0.5,                          ),                        ),                        errorBorder: OutlineInputBorder(                          borderSide: BorderSide(                            color: kSectionTileColor,                            width: 0.5,                          ),                        ),                        enabledBorder: OutlineInputBorder(                          borderSide: BorderSide(                            color: kSectionTileColor,                            width: 0.5,                          ),                        ),                      ),                      obscureText: false,                      //validator: passwordValidator,                      //controller: _passwordController,                      keyboardType: TextInputType.text,                    ),                  ),                ),              ],            ),          ),          Padding(            padding: const EdgeInsets.only(top: 8.0, left: 16.0, right: 32.0),            child: Container(              width: devSize.width,              child: SizedBox(                width: devSize.width,                child: TextFormField(                  // focusNode: _focusNode,                  decoration: InputDecoration(                    filled: true,                    fillColor: Colors.white,                    hintText: 'Company (Optional)',                    hintStyle: TextStyle(                      color: kFormInputColor,                      fontSize: 13,                    ),                    isDense: true,                    contentPadding: EdgeInsets.fromLTRB(8, 16, 15, 0),                    // contentPadding: EdgeInsets.only(left: 8,right: 8),                    focusedBorder: OutlineInputBorder(                      borderSide: BorderSide(                        color: Color(0xFF8D0303),                        width: 0.5,                      ),                    ),                    errorBorder: OutlineInputBorder(                      borderSide: BorderSide(                        color: kSectionTileColor,                        width: 0.5,                      ),                    ),                    enabledBorder: OutlineInputBorder(                      borderSide: BorderSide(                        color: kSectionTileColor,                        width: 0.5,                      ),                    ),                  ),                  obscureText: false,                  //validator: passwordValidator,                  //controller: _passwordController,                  keyboardType: TextInputType.text,                ),              ),            ),          ),          Padding(            padding: const EdgeInsets.only(top: 8.0, left: 16.0, right: 32.0),            child: Container(              width: devSize.width,              child: SizedBox(                width: devSize.width,                child: TextFormField(                  // focusNode: _focusNode,                  decoration: InputDecoration(                    filled: true,                    fillColor: Colors.white,                    hintText: 'Address',                    hintStyle: TextStyle(                      color: kFormInputColor,                      fontSize: 13,                    ),                    isDense: true,                    contentPadding: EdgeInsets.fromLTRB(8, 16, 15, 0),                    // contentPadding: EdgeInsets.only(left: 8,right: 8),                    focusedBorder: OutlineInputBorder(                      borderSide: BorderSide(                        color: Color(0xFF8D0303),                        width: 0.5,                      ),                    ),                    errorBorder: OutlineInputBorder(                      borderSide: BorderSide(                        color: kSectionTileColor,                        width: 0.5,                      ),                    ),                    enabledBorder: OutlineInputBorder(                      borderSide: BorderSide(                        color: kSectionTileColor,                        width: 0.5,                      ),                    ),                  ),                  obscureText: false,                  //validator: passwordValidator,                  //controller: _passwordController,                  keyboardType: TextInputType.text,                ),              ),            ),          ),          Padding(            padding: const EdgeInsets.only(top: 8.0, left: 16.0, right: 32.0),            child: Container(              width: devSize.width,              child: SizedBox(                width: devSize.width,                child: TextFormField(                  // focusNode: _focusNode,                  decoration: InputDecoration(                    filled: true,                    hintText: 'Apartment Suit etc (optional)',                    hintStyle: TextStyle(                      color: kFormInputColor,                      fontSize: 13,                    ),                    isDense: true,                    fillColor: Colors.white,                    contentPadding: EdgeInsets.fromLTRB(8, 16, 15, 0),                    // contentPadding: EdgeInsets.only(left: 8,right: 8),                    focusedBorder: OutlineInputBorder(                      borderSide: BorderSide(                        color: Color(0xFF8D0303),                        width: 0.5,                      ),                    ),                    errorBorder: OutlineInputBorder(                      borderSide: BorderSide(                        color: kSectionTileColor,                        width: 0.5,                      ),                    ),                    enabledBorder: OutlineInputBorder(                      borderSide: BorderSide(                        color: kSectionTileColor,                        width: 0.5,                      ),                    ),                  ),                  obscureText: false,                  //validator: passwordValidator,                  //controller: _passwordController,                  keyboardType: TextInputType.text,                ),              ),            ),          ),          Padding(            padding: const EdgeInsets.only(top: 8.0, left: 16.0, right: 32.0),            child: Container(              width: devSize.width,              child: SizedBox(                width: devSize.width,                child: TextFormField(                  // focusNode: _focusNode,                  decoration: InputDecoration(                    filled: true,                    fillColor: Colors.white,                    hintText: 'City',                    hintStyle: TextStyle(                      color: kFormInputColor,                      fontSize: 13,                    ),                    isDense: true,                    contentPadding: EdgeInsets.fromLTRB(8, 16, 15, 0),                    // contentPadding: EdgeInsets.only(left: 8,right: 8),                    focusedBorder: OutlineInputBorder(                      borderSide: BorderSide(                        color: Color(0xFF8D0303),                        width: 0.5,                      ),                    ),                    errorBorder: OutlineInputBorder(                      borderSide: BorderSide(                        color: kSectionTileColor,                        width: 0.5,                      ),                    ),                    enabledBorder: OutlineInputBorder(                      borderSide: BorderSide(                        color: kSectionTileColor,                        width: 0.5,                      ),                    ),                  ),                  obscureText: false,                  //validator: passwordValidator,                  //controller: _passwordController,                  keyboardType: TextInputType.text,                ),              ),            ),          ),          Padding(            padding: const EdgeInsets.only(top: 8.0, left: 16.0),            child: Row(              children: [                Container(                  width: devSize.width / 2.3,                  child: SizedBox(                    width: devSize.width / 2.3,                    child: TextFormField(                      // focusNode: _focusNode,                      decoration: InputDecoration(                        filled: true,                        fillColor: Colors.white,                        hintText: 'Country',                        hintStyle: TextStyle(                          color: kFormInputColor,                          fontSize: 13,                        ),                        isDense: true,                        contentPadding: EdgeInsets.fromLTRB(8, 16, 15, 0),                        // contentPadding: EdgeInsets.only(left: 8,right: 8),                        focusedBorder: OutlineInputBorder(                          borderSide: BorderSide(                            color: Color(0xFF8D0303),                            width: 0.5,                          ),                        ),                        errorBorder: OutlineInputBorder(                          borderSide: BorderSide(                            color: kSectionTileColor,                            width: 0.5,                          ),                        ),                        enabledBorder: OutlineInputBorder(                          borderSide: BorderSide(                            color: kSectionTileColor,                            width: 0.5,                          ),                        ),                      ),                      obscureText: false,                      //validator: passwordValidator,                      //controller: _passwordController,                      keyboardType: TextInputType.text,                    ),                  ),                ),                SizedBox(                  width: 4,                ),                Container(                  width: devSize.width / 2.3,                  child: SizedBox(                    width: devSize.width / 2.3,                    child: TextFormField(                      // focusNode: _focusNode,                      decoration: InputDecoration(                        filled: true,                        fillColor: Colors.white,                        hintText: 'Postal Code',                        hintStyle: TextStyle(                          color: kFormInputColor,                          fontSize: 13,                        ),                        isDense: true,                        contentPadding: EdgeInsets.fromLTRB(8, 16, 15, 0),                        // contentPadding: EdgeInsets.only(left: 8,right: 8),                        focusedBorder: OutlineInputBorder(                          borderSide: BorderSide(                            color: Color(0xFF8D0303),                            width: 0.5,                          ),                        ),                        errorBorder: OutlineInputBorder(                          borderSide: BorderSide(                            color: kSectionTileColor,                            width: 0.5,                          ),                        ),                        enabledBorder: OutlineInputBorder(                          borderSide: BorderSide(                            color: kSectionTileColor,                            width: 0.5,                          ),                        ),                      ),                      obscureText: false,                      //validator: passwordValidator,                      //controller: _passwordController,                      keyboardType: TextInputType.text,                    ),                  ),                ),              ],            ),          ),          Padding(            padding: const EdgeInsets.only(top: 8.0, left: 16.0, right: 32.0),            child: Container(              width: devSize.width,              child: SizedBox(                width: devSize.width,                child: TextFormField(                  // focusNode: _focusNode,                  decoration: InputDecoration(                    filled: true,                    fillColor: Colors.white,                    hintText: 'Phone (Optional)',                    hintStyle: TextStyle(                      color: kFormInputColor,                      fontSize: 13,                    ),                    isDense: true,                    contentPadding: EdgeInsets.fromLTRB(8, 16, 15, 0),                    // contentPadding: EdgeInsets.only(left: 8,right: 8),                    focusedBorder: OutlineInputBorder(                      borderSide: BorderSide(                        color: Color(0xFF8D0303),                        width: 0.5,                      ),                    ),                    errorBorder: OutlineInputBorder(                      borderSide: BorderSide(                        color: kSectionTileColor,                        width: 0.5,                      ),                    ),                    enabledBorder: OutlineInputBorder(                      borderSide: BorderSide(                        color: kSectionTileColor,                        width: 0.5,                      ),                    ),                  ),                  obscureText: false,                  //validator: passwordValidator,                  //controller: _passwordController,                  keyboardType: TextInputType.text,                ),              ),            ),          ),          Padding(            padding: const EdgeInsets.only(top: 8.0, left: 16.0, right: 32.0),            child: GestureDetector(              onTap: () async {                Navigator.push(                    context,                    PageRouteBuilder(                    pageBuilder: (c, a1, a2) => CheckoutInformation(),                transitionsBuilder: (c, anim, a2, child) => FadeTransition(opacity: anim, child: child),                transitionDuration: Duration(milliseconds: 0),                ));              },              child: Padding(                padding: const EdgeInsets.all(8.0),                child: Container(                  decoration: BoxDecoration(                    color: Color(0xFF8D0303),                  ),                  width: devSize.width * 0.85,                  height: devSize.height * 0.06,                  child: Center(                    child: Align(                      alignment: Alignment.center,                      child: Padding(                        padding: const EdgeInsets.only(right: 16),                        child: AutoSizeText(                          'Continue',                          style: TextStyle(                            color: Colors.white,                            fontSize: 15,                          ),                          textAlign: TextAlign.center,                        ),                      ),                    ),                  ),                ),              ),            ),          ),          Padding(            padding: const EdgeInsets.only(top: 8.0, left: 16.0, right: 32.0),            child: GestureDetector(              onTap: () async {                Navigator.push(                    context,                    PageRouteBuilder(                      pageBuilder: (c, a1, a2) => YoungAdultScreen(),                      transitionsBuilder: (c, anim, a2, child) => FadeTransition(opacity: anim, child: child),                      transitionDuration: Duration(milliseconds: 0),                    ));              },              child: Padding(                padding: const EdgeInsets.all(8.0),                child: Container(                  decoration: BoxDecoration(                    color: kGreyColor,                  ),                  width: devSize.width * 0.85,                  height: devSize.height * 0.06,                  child: Center(                    child: Align(                      alignment: Alignment.center,                      child: Padding(                        padding: const EdgeInsets.only(right: 16),                        child: AutoSizeText(                          'Return to Cart',                          style: TextStyle(                            color: Colors.black45,                            fontSize: 15,                          ),                          textAlign: TextAlign.center,                        ),                      ),                    ),                  ),                ),              ),            ),          ),        ],      )),    );  }}